{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","number","setNumber","number2","setNumber2","operation","setOperation","number2Toggle","setNumberState","NumberButton","buttonNum","onClick","OperatorButton","operator","className","startsWith","replace","includes","id","output","parseFloat","toString","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAkFeA,MA/Ef,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEA,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,UACrB,OAAO,wBAAQC,QAAS,kBAAMJ,EAAgBH,EAAWD,EAAUO,GAAaR,EAAUD,EAASS,IAA5F,SAAyGA,IAGlH,SAASE,EAAT,GAAqC,IAAZC,EAAW,EAAXA,SACrB,OAAO,wBAAQC,UAAU,YAAYH,QAAS,WACpBH,GAAe,GACfF,EAAaO,IAFhC,SAIJA,IAGP,OACE,sBAAKC,UAAU,MAAf,UACE,4BAAIP,EAAgBJ,EAAUF,IAC9B,uBACA,wBAAQa,UAAU,YAAYH,QAAS,kBAAMJ,EAAgBH,EAAW,IAAMF,EAAU,KAAxF,iBACA,wBAAQY,UAAU,YAAYH,QAAS,kBAAMJ,EAAiBJ,EAAQY,WAAW,KAAOX,EAAWD,EAAQa,QAAQ,IAAK,KAAOZ,EAAW,IAAD,OAAKD,IAAeF,EAAOc,WAAW,KAAOb,EAAUD,EAAOe,QAAQ,IAAK,KAAOd,EAAU,IAAD,OAAKD,KAAzO,kBACA,wBAAQa,UAAU,YAAYH,QAAS,kBAAMJ,EAAiBJ,EAAQc,SAAS,KAAO,KAAOb,EAAWD,EAAU,KAASF,EAAOgB,SAAS,KAAO,KAAOf,EAAUD,EAAS,MAA5K,eACA,wBAAQa,UAAU,YAAlB,kBACA,uBACA,cAACL,EAAD,CAAcC,UAAU,MACxB,cAACD,EAAD,CAAcC,UAAU,MACxB,cAACD,EAAD,CAAcC,UAAU,MACxB,cAACE,EAAD,CAAgBC,SAAS,MACzB,uBACA,cAACJ,EAAD,CAAcC,UAAU,MACxB,cAACD,EAAD,CAAcC,UAAU,MACxB,cAACD,EAAD,CAAcC,UAAU,MACxB,cAACE,EAAD,CAAgBC,SAAS,MACzB,uBACA,cAACJ,EAAD,CAAcC,UAAU,MACxB,cAACD,EAAD,CAAcC,UAAU,MACxB,cAACD,EAAD,CAAcC,UAAU,MACxB,cAACE,EAAD,CAAgBC,SAAS,MACzB,uBACA,0CACA,wBAAQK,GAAG,SAASP,QAAS,WAC3BH,GAAe,GAEf,IAAIW,EAAS,EAEb,OAAQd,GACN,IAAK,IACHc,GAAUC,WAAWnB,GAAUmB,WAAWjB,IAAUkB,WACpD,MACF,IAAK,IACHF,GAAUC,WAAWnB,GAAUmB,WAAWjB,IAAUkB,WACpD,MACF,IAAK,IACHF,GAAUC,WAAWnB,GAAUmB,WAAWjB,IAAUkB,WACpD,MACF,IAAK,IACHF,GAAUC,WAAWnB,GAAUmB,WAAWjB,IAAUkB,WAMpDC,MAAMH,KACRA,EAAS,KAGXjB,EAAUiB,GACVf,EAAW,KA3Bb,eA8BA,cAACK,EAAD,CAAcC,UAAU,MACxB,cAACE,EAAD,CAAgBC,SAAS,UCjEhBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1837965a.chunk.js","sourcesContent":["import './App.css';\nimport {useState} from 'react';\n\nfunction App() {\n  const [number, setNumber] = useState(\"\");\n  const [number2, setNumber2] = useState(\"\");\n  const [operation, setOperation] = useState(\"\");\n  const [number2Toggle, setNumberState] = useState(false);\n  \n  function NumberButton({buttonNum}) {\n    return <button onClick={() => number2Toggle ? setNumber2(number2 + buttonNum) : setNumber(number + buttonNum)}>{buttonNum}</button>\n  }\n\n  function OperatorButton({operator}) {\n      return <button className=\"operators\" onClick={() => {\n                                setNumberState(true);\n                                setOperation(operator);\n                             }\n      }>{operator}</button>\n  }\n\n  return (\n    <div className=\"App\">\n      <p>{number2Toggle ? number2 : number}</p>\n      <br/>\n      <button className=\"operators\" onClick={() => number2Toggle ? setNumber2(\"\") : setNumber(\"\")}>CLS</button>\n      <button className=\"operators\" onClick={() => number2Toggle ? (number2.startsWith(\"-\") ? setNumber2(number2.replace(\"-\", \"\")) : setNumber2(`-${number2}`)) : (number.startsWith(\"-\") ? setNumber(number.replace(\"-\", \"\")) : setNumber(`-${number}`))}>Â±</button>\n      <button className=\"operators\" onClick={() => number2Toggle ? (number2.includes(\".\") ? null : setNumber2(number2 + \".\")) : (number.includes(\".\") ? null : setNumber(number + \".\"))}>.</button>\n      <button className=\"operators\">&nbsp;</button>\n      <br/>\n      <NumberButton buttonNum=\"9\"/>\n      <NumberButton buttonNum=\"8\"/>\n      <NumberButton buttonNum=\"7\"/>\n      <OperatorButton operator=\"+\" />\n      <br/>\n      <NumberButton buttonNum=\"6\"/>\n      <NumberButton buttonNum=\"5\"/>\n      <NumberButton buttonNum=\"4\"/>\n      <OperatorButton operator=\"-\" />\n      <br/>\n      <NumberButton buttonNum=\"3\"/>\n      <NumberButton buttonNum=\"2\"/>\n      <NumberButton buttonNum=\"1\"/>\n      <OperatorButton operator=\"*\" />\n      <br/>\n      <button>&nbsp;</button>\n      <button id=\"equals\" onClick={() => {\n        setNumberState(false);\n\n        let output = 0;\n\n        switch (operation) {\n          case \"+\":\n            output = (parseFloat(number) + parseFloat(number2)).toString();\n            break;\n          case \"-\":\n            output = (parseFloat(number) - parseFloat(number2)).toString();\n            break;\n          case \"*\":\n            output = (parseFloat(number) * parseFloat(number2)).toString();\n            break;\n          case \"/\":\n            output = (parseFloat(number) / parseFloat(number2)).toString();\n            break;\n          default:\n            break;\n        }\n\n        if (isNaN(output)) {\n          output = \"0\";\n        }\n\n        setNumber(output);\n        setNumber2(\"\")\n\n      }}>=</button>\n      <NumberButton buttonNum=\"0\"/>\n      <OperatorButton operator=\"/\" />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}